# Solace AI Connector Example: CLI Gateway Configuration (Pure prompt_toolkit)
# This file demonstrates the CLI Gateway using pure prompt_toolkit for better
# terminal compatibility, especially in VS Code.
#
# Features:
# - Pure prompt_toolkit implementation (no Rich conflicts)
# - Bottom toolbar for status updates
# - Clean output above the prompt
# - Auto-save artifacts with compact notifications
# - Works perfectly in VS Code terminal
#
# Required Environment Variables:
# - NAMESPACE: The A2A topic namespace (e.g., "myorg/dev").
# - SOLACE_BROKER_URL: URL of the Solace broker (e.g., "ws://localhost:8008").
# - SOLACE_BROKER_USERNAME: Username for the Solace broker.
# - SOLACE_BROKER_PASSWORD: Password for the Solace broker.
# - SOLACE_BROKER_VPN: VPN name for the Solace broker.
#
# Usage:
#   sam run --config examples/gateways/cli_pt_gateway_example.yaml

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: cli_pt_gateway.log

# Shared SAM config
!include ../shared_config.yaml

apps:
  - name: cli_pt_gateway_app
    app_base_path: .
    app_module: solace_agent_mesh.gateway.generic.app

    broker:
      <<: *broker_connection

    app_config:
      # --- Required ---
      namespace: ${NAMESPACE}

      # --- Generic Adapter Framework Config ---
      gateway_adapter: solace_agent_mesh.gateway.cli_pt.adapter.CliPtAdapter

      # --- CLI prompt_toolkit Adapter Config ---
      adapter_config:
        default_agent_name: ${DEFAULT_AGENT_NAME, OrchestratorAgent}
        prompt_style: "sam> "
        auto_save_artifacts: true
        # artifact_download_dir: "./artifacts"  # Optional: custom directory

      # --- Artifact Service ---
      artifact_service:
        type: "filesystem"
        base_path: "/tmp/samv2"
        artifact_scope: "namespace"

      # --- Optional with Defaults ---
      default_user_identity: "cli_user"

      # --- Embed Resolution Config ---
      enable_embed_resolution: true
      gateway_artifact_content_limit_bytes: 10000000
      gateway_recursive_embed_depth: 3

      # --- System Purpose ---
      system_purpose: >
            The system is an AI Chatbot with agentic capabilities.
            It will use the agents available to provide information,
            reasoning and general assistance for the users in this system.
            **Always return useful artifacts and files that you create to the user.**
            Provide a status update before each tool call.
            Your external name is Agent Mesh.

      response_format: >
            Responses should be clear, concise, and professionally toned.
            Format responses to the user in Markdown using appropriate formatting.
            Note that the user is not able to access the internal artifacts of the system. You
            must return them, so if you create any files or artifacts, provide them to the user
            via the artifact_return embed.
